


--Multiplicar 2 campos(costo y valor unitario) Detalle_Venta mostrando el total 
create or replace trigger Control_Precios20
before insert on DETALLE_VENTA  for each row
begin
if :new.cantidad >0
then :new.TOTAL  := (:NEW.cantidad*(:NEW.costo_unitario*1 ));
end if;
end;

--Si si es menor o igual a 100 tendra un descuento de 10%
CREATE OR REPLACE EDITIONABLE TRIGGER  "CONTROL_PRECIOS" 
before insert on CARGO  for each row
begin
if :new.TOTAL >1000
then :new.TOTAL  := (:NEW.TOTAL-(:NEW.TOTAL*0.1 ));
end if;
end;

/
ALTER TRIGGER  "CONTROL_PRECIOS" ENABLE
/

--Si si es menor o igual a 100 tendra un descuento de 20%
CREATE OR REPLACE EDITIONABLE TRIGGER  "CONTROL_PRECIOS2" 
before insert on CARGO  for each row
begin
if :new.TOTAL <100
then :new.TOTAL  := (:NEW.TOTAL+(:NEW.TOTAL*0.2));
end if;
end;

--Si si es menor o igual a 100 tendra un descuento de 30%
CREATE OR REPLACE EDITIONABLE TRIGGER  "CONTROL_PRECIOS1" 
before insert on CARGO  for each row
begin
if :new.TOTAL >10000
then :new.TOTAL  := (:NEW.TOTAL-(:NEW.TOTAL*0.3));
end if;
end;

/
ALTER TRIGGER  "CONTROL_PRECIOS1" ENABLE
/


/
ALTER TRIGGER  "CONTROL_PRECIOS2" ENABLE
/

--Ingresos de Cargo_estado a Trackin_Envios
create or replace TRIGGER TRACK 
AFTER INSERT ON CARGO_ESTADO 
FOR EACH ROW
BEGIN 
IF INSERTING THEN 
INSERT INTO TRACKIN_ENVIOS VALUES (:NEW.ID_CARGO,:new.IDESTADO,sysdate);
END IF;
END;

--Envia la informacion de los estados
CREATE OR REPLACE EDITIONABLE TRIGGER  "TRACK" 
AFTER INSERT ON CARGO_ESTADO 
FOR EACH ROW
BEGIN 
IF INSERTING THEN 
INSERT INTO TRACKIN_ENVIOS VALUES (:NEW.ID_CARGO,:new.IDESTADO,sysdate);
END IF;
END;

/
ALTER TRIGGER  "TRACK" ENABLE
/


--Trigger registro
CREATE OR REPLACE EDITIONABLE TRIGGER  "TRG_BUR_USUARIO" 
BEFORE UPDATE ON USUARIO
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO AUDITORIA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'NOMBRE', :OLD.NOMBRE, :NEW.NOMBRE);
	INSERT INTO AUDITORIA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'APELLIDO', :OLD.APELLIDO, :NEW.APELLIDO);
	INSERT INTO AUDITORIA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'PASWORD', :OLD.PASWORD, :NEW.PASWORD);
	INSERT INTO AUDITORIA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'USUARIO', :OLD.IDUSUARIO, 'IDTIPOUSUARIO', :OLD.IDTIPOUSUARIO, :NEW.IDTIPOUSUARIO);	
END TRG_BUR_USUARIO;

/
ALTER TRIGGER  "TRG_BUR_USUARIO" ENABLE
/


--Trigger conductor
CREATE OR REPLACE EDITIONABLE TRIGGER  "TRG_BUR_CONDUCTOR" 
BEFORE UPDATE ON CONDUCTOR
REFERENCING OLD AS OLD
NEW AS NEW
FOR EACH ROW
BEGIN
	INSERT INTO AUDITORIA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'CONDUCTOR', :OLD.IDCONDUCTOR, 'DPI', :OLD.DPI, :NEW.DPI);
	INSERT INTO AUDITORIA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'CONDUCTOR', :OLD.IDCONDUCTOR, 'NUMEROLICENCIA', :OLD.NUMEROLICENCIA, :NEW.NUMEROLICENCIA);
	INSERT INTO AUDITORIA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'CONDUCTOR', :OLD.IDCONDUCTOR, 'NOMBRE', :OLD.NOMBRE, :NEW.NOMBRE);
	INSERT INTO AUDITORIA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'CONDUCTOR', :OLD.IDCONDUCTOR, 'APELLIDO', :OLD.APELLIDO, :NEW.APELLIDO);
	INSERT INTO AUDITORIA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'CONDUCTOR', :OLD.IDCONDUCTOR, 'TELEFONO', :OLD.TELEFONO, :NEW.TELEFONO);
	INSERT INTO AUDITORIA(FECHA, USUARIO, NOMBRETABLA, LLAVE, NOMBRECAMPO, VALORANTERIOR, VALORNUEVO)
	VALUES (SYSDATE, USER, 'CONDUCTOR', :OLD.IDCONDUCTOR, 'IDLICENCIA', :OLD.IDLICENCIA, :NEW.IDLICENCIA);
END TRG_BUR_CONDUCTOR;

/
ALTER TRIGGER  "TRG_BUR_CONDUCTOR" ENABLE
/


CREATE OR REPLACE EDITIONABLE TRIGGER  "REGISTRO1" 
AFTER UPDATE ON CARGO 
FOR EACH ROW
BEGIN 
IF UPDATING THEN 
INSERT INTO BITACORA VALUES (:NEW.IDUSUARIO,:new.IDVEHICULO,sysdate);
END IF;
END;

/
ALTER TRIGGER  "REGISTRO1" ENABLE
/

CREATE OR REPLACE EDITIONABLE TRIGGER  "REGISTRO" 
AFTER INSERT ON CARGO 
FOR EACH ROW
BEGIN 
IF INSERTING THEN 
INSERT INTO BITACORA VALUES (:NEW.IDUSUARIO,:new.IDVEHICULO,sysdate);
END IF;
END;

/
ALTER TRIGGER  "REGISTRO" ENABLE
/


--Para eliiminar un registro de usuario
CREATE OR REPLACE EDITIONABLE TRIGGER  "BITACORA_ELIMINAR" 
AFTER DELETE ON USUARIO
REFERENCING OLD AS OLD 
NEW AS NEW
FOR EACH ROW 

BEGIN      
    INSERT INTO BITACORAUSE (USUARIO,FECHA, MOV, IDUSUARIO,NOMBRE,APELLIDO,NOMBREUSUARIO,PASWORD,IDTIPOUSUARIO,TABLA)
   values (nvl(apex_application.g_user,user), TO_DATE(TRUNC(SYSDATE)), 'ELIMINO USUARIO' , :OLD.IDUSUARIO,:OLD.NOMBRE,:OLD.APELLIDO,:OLD.NOMBREUSUARIO,:OLD.PASWORD,:OLD.IDTIPOUSUARIO,'USUARIO');
 

END BITACORA_ELIMINAR;

/
ALTER TRIGGER  "BITACORA_ELIMINAR" ENABLE
/

--Guardara un registro sobre la tabla usuario
CREATE OR REPLACE EDITIONABLE TRIGGER  "BITACORA_" 
BEFORE UPDATE ON USUARIO
REFERENCING OLD AS OLD 
NEW AS NEW
FOR EACH ROW 

BEGIN      
    INSERT INTO BITACORAUS (USUARIO, FECHA, MOV,IDUSUARIO,NOMBRE,APELLIDO,NOMBREUSUARIO,PASWORD,IDTIPOUSUARIO,TABLA)
   values (nvl(apex_application.g_user,user), TO_DATE(TRUNC(SYSDATE)), 'ACTUALIZO DATOS',:OLD.IDUSUARIO,:OLD.NOMBRE,:OLD.APELLIDO,:OLD.NOMBREUSUARIO,:OLD.PASWORD,:OLD.IDTIPOUSUARIO,'USUARIOS');

END BITACORA_;

/
ALTER TRIGGER  "BITACORA_" ENABLE
/
